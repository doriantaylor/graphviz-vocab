#!/usr/bin/env ruby
# -*- mode: enh-ruby -*-

require 'graphviz/vocab'
require 'commander'
require 'pathname'

Commander.configure do
  program :name,        __FILE__
  program :version,     GraphViz::Vocab::VERSION
  program :description, 'Generate an OWL ontology from the GraphViz spec'

  command :convert do |c|
    c.syntax      = 'convert --config FILE | [OPTIONS]'
    c.description = 'Converts the inputs and generates the vocabulary.'
    c.option '-a', '--attributes FILE', 'Location of attribute source'
    c.option '-t', '--types FILE',      'Location of datatype source'
    c.option '-v', '--vocab FILE',      'Location of vocabulary stub'
    c.option '-o', '--output DIR',      'Output target directory'
    c.option '-c', '--config FILE',     'Supply a YAML config file instead'
    c.action do |args, opts|
      # first check config
      
      if opts.config
        cfg = Pathname(opts.config).expand_path

        raise ArgumentError.new("No YAML configuration file at #{cfg}") unless
          cfg.readable?

        require 'yaml'
        cfg = YAML.load_file(cfg)
        cfg.transform_keys!(&:to_sym)
        warn cfg.inspect
      end
      opth = opts.__hash__.transform_keys(&:to_sym).reject do |k, v|
        k == :config
      end
      # next overwrite any config file entries with command-line options
      gvv = GraphViz::Vocab.new(**opth)

      gvv.run
    end
  end

  default_command :convert
end
